import numpy as np
import matplotlib.pyplot as plt
from math import pi
from scipy.stats import bernoulli

#input
input_stream=[]
p=0.5;
#Amplitude
a=5
#cariier frequency
fc=50;
#Sampling frequency 
fs=500;
#time
T=2
t=np.arange(0,T,1/fs)
#binary input signal
symbol_duration=T/20;
symbol_length=int(symbol_duration*fs);
number_of_symbols=int(np.floor(np.size(t)/symbol_length))

input_stream=bernoulli.rvs(p,size=number_of_symbols)
bpsk=np.zeros(number_of_symbols*symbol_length)
message=np.zeros(number_of_symbols*symbol_length)

j=0
for i in range(len(input_stream)):
    if input_stream[i]==1:
        message[j:j+symbol_length]=np.ones(symbol_length)
        j=j+symbol_length
    else:    
        message[j:j+symbol_length]=-np.ones(symbol_length)
        j=j+symbol_length
        
print(np.size(message))
#BPSK
j=0;
for i in range(len(input_stream)):
    if input_stream[i]==1:
        bpsk[j:j+symbol_length]=a*np.sin(2*pi*fc*t[0:symbol_length])
        j=j+symbol_length
    else:    
        bpsk[j:j+symbol_length]=a*np.sin(2*pi*fc*t[0:symbol_length]+pi)
        j=j+symbol_length                           

                                       
        
          
          
plt.subplot(211)
plt.plot(t,message)
plt.title('Base band message Signal')
plt.xlabel('Time(s)')
plt.ylabel('Amplitude')        

plt.subplot(212)
plt.plot(t,bpsk)
plt.title('BPSK Modulated Signal')
plt.xlabel('Time(s)')
plt.ylabel('Amplitude')    
plt.tight_layout()    
        
        
 

